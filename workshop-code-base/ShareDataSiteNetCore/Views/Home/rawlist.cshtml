@{
    ViewData["Title"] = "data share demo";
}
@section Script{
    <style>
        .func {
            position: absolute;
            top: 11px;
            right: 17px;
        }

        .base {
            border: 1px dotted #03c;
            padding: 16px;
            margin-bottom: 16px;
            cursor: pointer;
        }

            .base:hover {
                background: #f8f5a9;
            }

        .text {
        }

        .image {
            justify-content: center;
            display: flex;
        }

        img {
            max-width: 100%;
        }

        .filelist ul {
            text-decoration: none;
            margin: 0;
            padding: 0;
        }

            .filelist ul li {
                text-decoration: none;
                padding: 16px;
                border-bottom: thin dotted #808080;
            }

        table td {
            border: 1px solid #999;
            width: 80px;
            height: 40px;
            margin: 10px;
        }

        td.selected {
            background-color: #85be09;
        }
    </style>
}
<div style="padding:16px;background-color:#f3f3f3;">
    <div>
        <span style="font-size:16px;">DATA SHARE DEMO</span>
    </div>
    <div style="text-align:right;">
        <a href="/"><span>Files</span></a>
    </div>
</div>
<div class="filelist" style="margin-top:16px;" id="filelist">
    <ul>
        <li v-for="f in fileList">
            <div style="margin-bottom:8px;">
                <span>{{f.Name}}</span>
            </div>
            <div style="margin-bottom:8px;">
                <a href="javascript:void(0)" v-on:click="showRaw(f.DownloadPath)">Show Raw data</a>
            </div>
            <div>
                <span style="display:block;font-size:0.8em;color:#808080">{{transDateTime(f.CreatedDateTime)}}</span>
            </div>
        </li>
    </ul>
</div>
<div class="windowmask" style="z-index:2000;display:none;position:fixed;top:0;left:0;right:0;bottom:0;background-color:#000000;opacity:0.6"></div>
<div class="dialogcontainer" style="z-index:2000;position:fixed;top:0;left:0;right:0;bottom:0;display:none;flex-direction:column;justify-content:center;align-items:center;">
    <div class="dialog" style="position:relative;width:95%;height:95%;background-color:#ffffff;">
        <div class="content" style="position:absolute;top:40px;left:0;right:0;bottom:0;overflow-y:auto;"></div>
        <span style="color:#000000;position:absolute;top:10px;right:16px;cursor:pointer;" onclick="closedialog()">[close]</span>
    </div>
</div>
<script>

    var isMouseDown = false;
    var startRowIndex = null;
    var startCellIndex = null;


    var closedialog = function () {
        $(".windowmask").hide();
        $(".dialogcontainer").hide();
    }
    var showdialog = function (content) {
        $(".windowmask").show();
        $(".dialogcontainer").css({ "display": "flex" });
        $(".dialog .content").html(content);
    }

    var selectTo = function (table, cell) {

        var row = cell.parent();
        var cellIndex = cell.index();
        var rowIndex = row.index();
        var rowStart, rowEnd, cellStart, cellEnd;

        if (rowIndex < startRowIndex) {
            rowStart = rowIndex;
            rowEnd = startRowIndex;
        } else {
            rowStart = startRowIndex;
            rowEnd = rowIndex;
        }

        if (cellIndex < startCellIndex) {
            cellStart = cellIndex;
            cellEnd = startCellIndex;
        } else {
            cellStart = startCellIndex;
            cellEnd = cellIndex;
        }
        for (var i = rowStart; i <= rowEnd; i++) {
            var rowCells = table.find("tr").eq(i).find("td");
            for (var j = cellStart; j <= cellEnd; j++) {
                rowCells.eq(j).addClass("selected");
            }
        }
    }


    var fileListVM = new Vue({
        el: "#filelist",
        data: {
            fileList: [],
            queryUrl: '',
        },
        methods: {
            getOneDriveRawFileList: function () {
                var self = this;
                var prefixUrl = "https://graph.microsoft.com/v1.0/me/drive/root:/shareddataapp/rawdata:";
                GetRawFiles(prefixUrl).then(function (data) {
                    self.fileList = data;
                });
            },
            showRaw: function (path) {
                console.log("file path: " + path);

                $.ajax({
                    url: path,
                    method: "get",
                    success: function (data) {
                        showdialog(data);

                        //Get table selected area content
                        var alltable = $(".table");
                        alltable.find("td").mousedown(function (e) {
                            var table = $(this).parent().parent().parent();
                            isMouseDown = true;
                            table.prev().css("display", "block");
                            var cell = $(this);
                            table.find(".selected").removeClass("selected"); // deselect everything
                            if (e.shiftKey) {
                                selectTo(table, cell);
                            } else {
                                cell.addClass("selected");
                                startCellIndex = cell.index();
                                startRowIndex = cell.parent().index();
                            }

                            //insert table buttion click event
                            table.prev().click(function (e) {
                                var tableRegion = new Array();
                                table.find("tr").each(function () {
                                    var rowArray = new Array();
                                    var rowFlag = false;
                                    $(this).find("td").each(function () {
                                        if ($(this).hasClass("selected")) {
                                            rowArray.push($(this).text());
                                            rowFlag = true;
                                        }
                                    });
                                    if (rowFlag) {
                                        tableRegion.push(rowArray);
                                    }
                                });
                                console.log(tableRegion);
                                app.insertTable(tableRegion, null);

                            });

                            return false; // prevent text selection
                        })
                            .mouseover(function () {
                                if (!isMouseDown) return;
                                var table = $(this).parent().parent().parent();
                                table.find(".selected").removeClass("selected");
                                selectTo(table, $(this));
                            })
                            .bind("selectstart", function () {
                                return false;
                            });


                        $(".dialog").find(".base.text").click(function () {
                            app.insertText($(this).text());
                        });
                        $(".dialog").find(".base.image").click(function () {
                            var base64 = $(this).find("img").attr("src").substring($(this).find("img").attr("src").indexOf(",") + 1);
                            app.insertImage(base64);
                        });
                    },
                    error: function (error) {
                    },
                    complete: function (data) {

                    },
                    contentType: "text/html; charset=utf-8",
                    dataType: "text"
                });
            },
            transDateTime: transDateTime,
        }
    });
    app.ready(function (graph) {
        fileListVM.getOneDriveRawFileList();
    })

    $(document).mouseup(function () {
        isMouseDown = false;
    });

</script>